{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% set classes = [
  'node',
  'node--type--' ~ node.bundle|clean_class,
  node.bundle|clean_class,
  view_mode ? 'node--view-mode--' ~ view_mode|clean_class,
  view_mode|clean_class,
  not node.isPublished() ? 'node--unpublished'
] %}

<div {{ attributes.addClass(classes) }}>

  <div{{ title_attributes.addClass('page-title') }}>
    <div class="wrap">
      <h2 class="h1">{{ "Webinars" | t }}</h2>
    </div>
  </div> <!-- /.page-title -->

  {{ region.sub_header }}

  {{ region.admin_controls }}

  <div class="page-content">
  
    <div class="webinar-video">

      <div class="webinar-container" data-video-nid="{{node.id()}}">
        {% if logged_in or is_unrestricted_webinar %}
          {{ content.field_video_link }}
        {% else %}
          {{ content.field_image}}
          {# <form class="webinar-access-form" style="display:none">
            <label for="webinar-access-code" id="webinar-access-code-label">Enter webinar access code</label>
            <div class="webinar-error" style="display:none"></div>
            <input type="password" name="access_code" id="webinar-access-code" />
            <input type="hidden" name="webinar_nid" value="{{ node.id() }}" />
            <input type="submit" class="btn" value="Submit" />
          </form> #}
        {% endif %}
      </div>
      
    </div>
        
    <div class="main-column">

      {% if region.content_top %}
        {{ region.content_top }}
      {% endif %}

      <div class="event-content">
        <h1>{{ label }}</h1>
        {{ content.body }}
      </div>
      
      <a href="/knowledge-center/webinars" class="back-link">{{ "See All Webinars" | t }}</a>

      {% if region.content_bottom %}
        {{ region.content_bottom }}
      {% endif %}

    </div> <!-- /.main-column -->

    {{ content.field_layers }}

  </div> <!-- /.page-content -->

  {% if not logged_in %}
    <div class="webinar-access">
      <h2>Enter your access code to view the webinar.</h2>
      <div class="webinar-error error" style="display:none"></div>
      <form class="webinar-access-form">
        <label for="webinar-access-code" class="visuallyhidden" id="webinar-access-code-label">Access Code</label>
        <input type="password" name="access_code" id="webinar-access-code" placeholder="Access Code" />
        <input type="hidden" name="webinar_nid" value="{{ node.id() }}" />
        <input type="submit" class="button" value="Submit" />
      </form>
      <p>If you're a member, you can access any of our webinars free of charge. Simply <a href="#">fill out a brief form</a> to receive your access code. Non-members may purchase webinars on an individual basis.</p>
      {% if content.field_paypal_link | render %}<a href="{{ content.field_paypal_link | render | striptags | trim }}"  class="purchase-link">Purchase Webinar</a>{% endif %}
    </div>
  {% endif %}

  {% if region.sub_content %}
    {{ region.sub_content }}
  {% endif %}

</div> <!-- /.main-content -->